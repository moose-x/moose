2D Simulation
T1: 
ros2 run turtlesim turtlesim_node
T2:
ros2 run turtlesim turtle_teleop_key

ros2 topic echo /turtle1/cmd_vel
ros2 topic echo /turtle1/pose
ros2 topic info /turtle1/cmd_vel
ros2 topic info /turtle1/pose


GAZEBO
sudo apt update
sudo apt install ros-humble-turtlebot3
sudo apt install ros-humble-turtlebot3-gazebo
export TURTLEBOT3_MODEL=burger
Add this line to your ~/.bashrc file:
echo "export TURTLEBOT3_MODEL=burger" >> ~/.bashrc
source ~/.bashrc

T1:
ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py
(or)
ros2 launch turtlebot3_gazebo turtlebot3_house.launch.py

T2:
ros2 run turtlebot3_teleop teleop_keyboard
(or)
ros2 run teleop_twist_keyboard teleop_twist_keyboard
Open Terminal 3 and run ‘ros2 topic list’

Open new terminal to run following:
? ros2 launch turtlebot3_cartographer cartographer.launch.py
We want to save this map, for which we need a package
? sudo apt install ros-humble-nav2-map-server
Save the map by typing:
ros2 run nav2_map_server map_saver_cli -f ~/map

To run Navigation algorithms, we need to install the following packages:
? sudo apt install ros-humble-navigation2
? sudo apt install ros-humble-nav2-bringup
? Keep running turtlebot in T1
? Map can also be built with slam_toolbox
? ros2 launch slam_toolbox online_async_launch.py
? Save map in the home directory
? Run the localization module in T2
? ros2 launch nav2_bringup localization_launch.py map:=map_name.yaml
use_sim_time:=True
In T3, run rviz2
In T4, type:
? ros2 launch nav2_bringup navigation_launch.py use_sim_time:=True
map_subscribe_transient_local:=true



-------------------------------------------------------------------------------------
// Motor A (Left)
const int IN1 = 3;
const int IN2 = 4;

// Motor B (Right)
const int IN3 = 5;
const int IN4 = 6;

void setup() {
  // Set motor pins as output
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
}

void loop() {
  // Forward
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(2000);

  // Backward
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(2000);

  // Stop
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
  delay(2000);
}
